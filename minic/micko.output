Grammar

    0 $accept: program $end

    1 program: program_architecture

    2 program_architecture: structure_list
    3                     | program_architecture structure_list

    4 structure_list: function
    5               | class
    6               | interface

    7 @1: /* empty */

    8 interface: _INTERFACE _ID @1 _LBRACKET interface_items _RBRACKET

    9 interface_items: /* empty */
   10                | interface_items interface_function

   11 @2: /* empty */

   12 class: _CLASS _ID @2 _LBRACKET class_items _RBRACKET

   13 @3: /* empty */

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET

   15 class_items: /* empty */
   16            | class_items class_item

   17 class_item: function
   18           | class_attribute
   19           | constructor

   20 @4: /* empty */

   21 @5: /* empty */

   22 @6: /* empty */

   23 constructor: _ID _LPAREN @4 @5 constructor_parameter_list @6 _RPAREN body

   24 constructor_parameter_list: /* empty */
   25                           | constructor_parameter
   26                           | constructor_parameter_list _COMMA constructor_parameter

   27 constructor_parameter: _TYPE _ID

   28 @7: /* empty */

   29 class_attribute: _TYPE _ID @7 _SEMICOLON

   30 @8: /* empty */

   31 interface_function: _TYPE _ID @8 _LPAREN parameter_list _RPAREN _SEMICOLON

   32 @9: /* empty */

   33 function: _TYPE _ID @9 _LPAREN parameter_list _RPAREN body

   34 parameter_list: /* empty */
   35               | parameter
   36               | parameter_list _COMMA parameter

   37 parameter: _TYPE _ID

   38 @10: /* empty */

   39 body: _LBRACKET variable_list @10 statement_list _RBRACKET

   40 variable_list: /* empty */
   41              | variable_list variable

   42 variable: _TYPE _ID _SEMICOLON

   43 statement_list: /* empty */
   44               | statement_list statement

   45 statement: compound_statement
   46          | assignment_statement
   47          | if_statement
   48          | return_statement
   49          | object_assignment_statement

   50 compound_statement: _LBRACKET statement_list _RBRACKET

   51 @11: /* empty */

   52 @12: /* empty */

   53 @13: /* empty */

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

   55 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   56 @14: /* empty */

   57 @15: /* empty */

   58 @16: /* empty */

   59 assignment_statement: _ID _DOT @14 _ID @15 _ASSIGN num_exp @16 _SEMICOLON

   60 num_exp: exp
   61        | num_exp _AROP exp

   62 exp: literal
   63    | _ID
   64    | function_call
   65    | _LPAREN num_exp _RPAREN
   66    | _ID _DOT _ID

   67 literal: _INT_NUMBER
   68        | _UINT_NUMBER

   69 @17: /* empty */

   70 function_call: _ID @17 _LPAREN argument _RPAREN

   71 new_object_arguments: /* empty */
   72                     | new_object_argument
   73                     | new_object_arguments _COMMA new_object_argument

   74 new_object_argument: _ID
   75                    | _INT_NUMBER
   76                    | _UINT_NUMBER

   77 argument: /* empty */
   78         | num_exp

   79 if_statement: if_part
   80             | if_part _ELSE statement

   81 @18: /* empty */

   82 @19: /* empty */

   83 if_part: _IF _LPAREN @18 rel_exp @19 _RPAREN statement

   84 rel_exp: num_exp _RELOP num_exp

   85 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 27 29 31 33 37 42
_IF (259) 83
_ELSE (260) 80
_RETURN (261) 85
_ID (262) 8 12 14 23 27 29 31 33 37 42 54 55 59 63 66 70 74
_INT_NUMBER (263) 67 75
_UINT_NUMBER (264) 68 76
_LPAREN (265) 23 31 33 54 65 70 83
_RPAREN (266) 23 31 33 54 65 70 83
_LBRACKET (267) 8 12 14 39 50
_RBRACKET (268) 8 12 14 39 50
_ASSIGN (269) 54 55 59
_SEMICOLON (270) 29 31 42 54 55 59 85
_AROP (271) 61
_RELOP (272) 84
_CLASS (273) 12 14
_INTERFACE (274) 8
_COMMA (275) 26 36 73
_IMPLEMENTS (276) 14
_NEW (277) 54
_DOT (278) 59 66
ONLY_IF (279)


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
program_architecture (27)
    on left: 2 3, on right: 1 3
structure_list (28)
    on left: 4 5 6, on right: 2 3
interface (29)
    on left: 8, on right: 6
@1 (30)
    on left: 7, on right: 8
interface_items (31)
    on left: 9 10, on right: 8 10
class (32)
    on left: 12 14, on right: 5
@2 (33)
    on left: 11, on right: 12
@3 (34)
    on left: 13, on right: 14
class_items (35)
    on left: 15 16, on right: 12 14 16
class_item (36)
    on left: 17 18 19, on right: 16
constructor (37)
    on left: 23, on right: 19
@4 (38)
    on left: 20, on right: 23
@5 (39)
    on left: 21, on right: 23
@6 (40)
    on left: 22, on right: 23
constructor_parameter_list (41)
    on left: 24 25 26, on right: 23 26
constructor_parameter (42)
    on left: 27, on right: 25 26
class_attribute (43)
    on left: 29, on right: 18
@7 (44)
    on left: 28, on right: 29
interface_function (45)
    on left: 31, on right: 10
@8 (46)
    on left: 30, on right: 31
function (47)
    on left: 33, on right: 4 17
@9 (48)
    on left: 32, on right: 33
parameter_list (49)
    on left: 34 35 36, on right: 31 33 36
parameter (50)
    on left: 37, on right: 35 36
body (51)
    on left: 39, on right: 23 33
@10 (52)
    on left: 38, on right: 39
variable_list (53)
    on left: 40 41, on right: 39 41
variable (54)
    on left: 42, on right: 41
statement_list (55)
    on left: 43 44, on right: 39 44 50
statement (56)
    on left: 45 46 47 48 49, on right: 44 80 83
compound_statement (57)
    on left: 50, on right: 45
object_assignment_statement (58)
    on left: 54, on right: 49
@11 (59)
    on left: 51, on right: 54
@12 (60)
    on left: 52, on right: 54
@13 (61)
    on left: 53, on right: 54
assignment_statement (62)
    on left: 55 59, on right: 46
@14 (63)
    on left: 56, on right: 59
@15 (64)
    on left: 57, on right: 59
@16 (65)
    on left: 58, on right: 59
num_exp (66)
    on left: 60 61, on right: 55 59 61 65 78 84 85
exp (67)
    on left: 62 63 64 65 66, on right: 60 61
literal (68)
    on left: 67 68, on right: 62
function_call (69)
    on left: 70, on right: 64
@17 (70)
    on left: 69, on right: 70
new_object_arguments (71)
    on left: 71 72 73, on right: 54 73
new_object_argument (72)
    on left: 74 75 76, on right: 72 73
argument (73)
    on left: 77 78, on right: 70
if_statement (74)
    on left: 79 80, on right: 47
if_part (75)
    on left: 83, on right: 79 80
@18 (76)
    on left: 81, on right: 83
@19 (77)
    on left: 82, on right: 83
rel_exp (78)
    on left: 84, on right: 83
return_statement (79)
    on left: 85, on right: 48


state 0

    0 $accept: . program $end

    _TYPE       shift, and go to state 1
    _CLASS      shift, and go to state 2
    _INTERFACE  shift, and go to state 3

    program               go to state 4
    program_architecture  go to state 5
    structure_list        go to state 6
    interface             go to state 7
    class                 go to state 8
    function              go to state 9


state 1

   33 function: _TYPE . _ID @9 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 10


state 2

   12 class: _CLASS . _ID @2 _LBRACKET class_items _RBRACKET
   14      | _CLASS . _ID _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET

    _ID  shift, and go to state 11


state 3

    8 interface: _INTERFACE . _ID @1 _LBRACKET interface_items _RBRACKET

    _ID  shift, and go to state 12


state 4

    0 $accept: program . $end

    $end  shift, and go to state 13


state 5

    1 program: program_architecture .
    3 program_architecture: program_architecture . structure_list

    _TYPE       shift, and go to state 1
    _CLASS      shift, and go to state 2
    _INTERFACE  shift, and go to state 3

    $default  reduce using rule 1 (program)

    structure_list  go to state 14
    interface       go to state 7
    class           go to state 8
    function        go to state 9


state 6

    2 program_architecture: structure_list .

    $default  reduce using rule 2 (program_architecture)


state 7

    6 structure_list: interface .

    $default  reduce using rule 6 (structure_list)


state 8

    5 structure_list: class .

    $default  reduce using rule 5 (structure_list)


state 9

    4 structure_list: function .

    $default  reduce using rule 4 (structure_list)


state 10

   33 function: _TYPE _ID . @9 _LPAREN parameter_list _RPAREN body

    $default  reduce using rule 32 (@9)

    @9  go to state 15


state 11

   12 class: _CLASS _ID . @2 _LBRACKET class_items _RBRACKET
   14      | _CLASS _ID . _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET

    _IMPLEMENTS  shift, and go to state 16

    $default  reduce using rule 11 (@2)

    @2  go to state 17


state 12

    8 interface: _INTERFACE _ID . @1 _LBRACKET interface_items _RBRACKET

    $default  reduce using rule 7 (@1)

    @1  go to state 18


state 13

    0 $accept: program $end .

    $default  accept


state 14

    3 program_architecture: program_architecture structure_list .

    $default  reduce using rule 3 (program_architecture)


state 15

   33 function: _TYPE _ID @9 . _LPAREN parameter_list _RPAREN body

    _LPAREN  shift, and go to state 19


state 16

   14 class: _CLASS _ID _IMPLEMENTS . _ID @3 _LBRACKET class_items _RBRACKET

    _ID  shift, and go to state 20


state 17

   12 class: _CLASS _ID @2 . _LBRACKET class_items _RBRACKET

    _LBRACKET  shift, and go to state 21


state 18

    8 interface: _INTERFACE _ID @1 . _LBRACKET interface_items _RBRACKET

    _LBRACKET  shift, and go to state 22


state 19

   33 function: _TYPE _ID @9 _LPAREN . parameter_list _RPAREN body

    _TYPE  shift, and go to state 23

    $default  reduce using rule 34 (parameter_list)

    parameter_list  go to state 24
    parameter       go to state 25


state 20

   14 class: _CLASS _ID _IMPLEMENTS _ID . @3 _LBRACKET class_items _RBRACKET

    $default  reduce using rule 13 (@3)

    @3  go to state 26


state 21

   12 class: _CLASS _ID @2 _LBRACKET . class_items _RBRACKET

    $default  reduce using rule 15 (class_items)

    class_items  go to state 27


state 22

    8 interface: _INTERFACE _ID @1 _LBRACKET . interface_items _RBRACKET

    $default  reduce using rule 9 (interface_items)

    interface_items  go to state 28


state 23

   37 parameter: _TYPE . _ID

    _ID  shift, and go to state 29


state 24

   33 function: _TYPE _ID @9 _LPAREN parameter_list . _RPAREN body
   36 parameter_list: parameter_list . _COMMA parameter

    _RPAREN  shift, and go to state 30
    _COMMA   shift, and go to state 31


state 25

   35 parameter_list: parameter .

    $default  reduce using rule 35 (parameter_list)


state 26

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 . _LBRACKET class_items _RBRACKET

    _LBRACKET  shift, and go to state 32


state 27

   12 class: _CLASS _ID @2 _LBRACKET class_items . _RBRACKET
   16 class_items: class_items . class_item

    _TYPE      shift, and go to state 33
    _ID        shift, and go to state 34
    _RBRACKET  shift, and go to state 35

    class_item       go to state 36
    constructor      go to state 37
    class_attribute  go to state 38
    function         go to state 39


state 28

    8 interface: _INTERFACE _ID @1 _LBRACKET interface_items . _RBRACKET
   10 interface_items: interface_items . interface_function

    _TYPE      shift, and go to state 40
    _RBRACKET  shift, and go to state 41

    interface_function  go to state 42


state 29

   37 parameter: _TYPE _ID .

    $default  reduce using rule 37 (parameter)


state 30

   33 function: _TYPE _ID @9 _LPAREN parameter_list _RPAREN . body

    _LBRACKET  shift, and go to state 43

    body  go to state 44


state 31

   36 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 23

    parameter  go to state 45


state 32

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET . class_items _RBRACKET

    $default  reduce using rule 15 (class_items)

    class_items  go to state 46


state 33

   29 class_attribute: _TYPE . _ID @7 _SEMICOLON
   33 function: _TYPE . _ID @9 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 47


state 34

   23 constructor: _ID . _LPAREN @4 @5 constructor_parameter_list @6 _RPAREN body

    _LPAREN  shift, and go to state 48


state 35

   12 class: _CLASS _ID @2 _LBRACKET class_items _RBRACKET .

    $default  reduce using rule 12 (class)


state 36

   16 class_items: class_items class_item .

    $default  reduce using rule 16 (class_items)


state 37

   19 class_item: constructor .

    $default  reduce using rule 19 (class_item)


state 38

   18 class_item: class_attribute .

    $default  reduce using rule 18 (class_item)


state 39

   17 class_item: function .

    $default  reduce using rule 17 (class_item)


state 40

   31 interface_function: _TYPE . _ID @8 _LPAREN parameter_list _RPAREN _SEMICOLON

    _ID  shift, and go to state 49


state 41

    8 interface: _INTERFACE _ID @1 _LBRACKET interface_items _RBRACKET .

    $default  reduce using rule 8 (interface)


state 42

   10 interface_items: interface_items interface_function .

    $default  reduce using rule 10 (interface_items)


state 43

   39 body: _LBRACKET . variable_list @10 statement_list _RBRACKET

    $default  reduce using rule 40 (variable_list)

    variable_list  go to state 50


state 44

   33 function: _TYPE _ID @9 _LPAREN parameter_list _RPAREN body .

    $default  reduce using rule 33 (function)


state 45

   36 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 36 (parameter_list)


state 46

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET class_items . _RBRACKET
   16 class_items: class_items . class_item

    _TYPE      shift, and go to state 33
    _ID        shift, and go to state 34
    _RBRACKET  shift, and go to state 51

    class_item       go to state 36
    constructor      go to state 37
    class_attribute  go to state 38
    function         go to state 39


state 47

   29 class_attribute: _TYPE _ID . @7 _SEMICOLON
   33 function: _TYPE _ID . @9 _LPAREN parameter_list _RPAREN body

    _LPAREN   reduce using rule 32 (@9)
    $default  reduce using rule 28 (@7)

    @7  go to state 52
    @9  go to state 15


state 48

   23 constructor: _ID _LPAREN . @4 @5 constructor_parameter_list @6 _RPAREN body

    $default  reduce using rule 20 (@4)

    @4  go to state 53


state 49

   31 interface_function: _TYPE _ID . @8 _LPAREN parameter_list _RPAREN _SEMICOLON

    $default  reduce using rule 30 (@8)

    @8  go to state 54


state 50

   39 body: _LBRACKET variable_list . @10 statement_list _RBRACKET
   41 variable_list: variable_list . variable

    _TYPE  shift, and go to state 55

    $default  reduce using rule 38 (@10)

    @10       go to state 56
    variable  go to state 57


state 51

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET .

    $default  reduce using rule 14 (class)


state 52

   29 class_attribute: _TYPE _ID @7 . _SEMICOLON

    _SEMICOLON  shift, and go to state 58


state 53

   23 constructor: _ID _LPAREN @4 . @5 constructor_parameter_list @6 _RPAREN body

    $default  reduce using rule 21 (@5)

    @5  go to state 59


state 54

   31 interface_function: _TYPE _ID @8 . _LPAREN parameter_list _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 60


state 55

   42 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 61


state 56

   39 body: _LBRACKET variable_list @10 . statement_list _RBRACKET

    $default  reduce using rule 43 (statement_list)

    statement_list  go to state 62


state 57

   41 variable_list: variable_list variable .

    $default  reduce using rule 41 (variable_list)


state 58

   29 class_attribute: _TYPE _ID @7 _SEMICOLON .

    $default  reduce using rule 29 (class_attribute)


state 59

   23 constructor: _ID _LPAREN @4 @5 . constructor_parameter_list @6 _RPAREN body

    _TYPE  shift, and go to state 63

    $default  reduce using rule 24 (constructor_parameter_list)

    constructor_parameter_list  go to state 64
    constructor_parameter       go to state 65


state 60

   31 interface_function: _TYPE _ID @8 _LPAREN . parameter_list _RPAREN _SEMICOLON

    _TYPE  shift, and go to state 23

    $default  reduce using rule 34 (parameter_list)

    parameter_list  go to state 66
    parameter       go to state 25


state 61

   42 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 67


state 62

   39 body: _LBRACKET variable_list @10 statement_list . _RBRACKET
   44 statement_list: statement_list . statement

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71
    _RBRACKET  shift, and go to state 72

    statement                    go to state 73
    compound_statement           go to state 74
    object_assignment_statement  go to state 75
    assignment_statement         go to state 76
    if_statement                 go to state 77
    if_part                      go to state 78
    return_statement             go to state 79


state 63

   27 constructor_parameter: _TYPE . _ID

    _ID  shift, and go to state 80


state 64

   23 constructor: _ID _LPAREN @4 @5 constructor_parameter_list . @6 _RPAREN body
   26 constructor_parameter_list: constructor_parameter_list . _COMMA constructor_parameter

    _COMMA  shift, and go to state 81

    $default  reduce using rule 22 (@6)

    @6  go to state 82


state 65

   25 constructor_parameter_list: constructor_parameter .

    $default  reduce using rule 25 (constructor_parameter_list)


state 66

   31 interface_function: _TYPE _ID @8 _LPAREN parameter_list . _RPAREN _SEMICOLON
   36 parameter_list: parameter_list . _COMMA parameter

    _RPAREN  shift, and go to state 83
    _COMMA   shift, and go to state 31


state 67

   42 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 42 (variable)


state 68

   83 if_part: _IF . _LPAREN @18 rel_exp @19 _RPAREN statement

    _LPAREN  shift, and go to state 84


state 69

   85 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    num_exp        go to state 89
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92


state 70

   54 object_assignment_statement: _ID . _ID @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON
   55 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   59                     | _ID . _DOT @14 _ID @15 _ASSIGN num_exp @16 _SEMICOLON

    _ID      shift, and go to state 93
    _ASSIGN  shift, and go to state 94
    _DOT     shift, and go to state 95


state 71

   50 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 43 (statement_list)

    statement_list  go to state 96


state 72

   39 body: _LBRACKET variable_list @10 statement_list _RBRACKET .

    $default  reduce using rule 39 (body)


state 73

   44 statement_list: statement_list statement .

    $default  reduce using rule 44 (statement_list)


state 74

   45 statement: compound_statement .

    $default  reduce using rule 45 (statement)


state 75

   49 statement: object_assignment_statement .

    $default  reduce using rule 49 (statement)


state 76

   46 statement: assignment_statement .

    $default  reduce using rule 46 (statement)


state 77

   47 statement: if_statement .

    $default  reduce using rule 47 (statement)


state 78

   79 if_statement: if_part .
   80             | if_part . _ELSE statement

    _ELSE  shift, and go to state 97

    $default  reduce using rule 79 (if_statement)


state 79

   48 statement: return_statement .

    $default  reduce using rule 48 (statement)


state 80

   27 constructor_parameter: _TYPE _ID .

    $default  reduce using rule 27 (constructor_parameter)


state 81

   26 constructor_parameter_list: constructor_parameter_list _COMMA . constructor_parameter

    _TYPE  shift, and go to state 63

    constructor_parameter  go to state 98


state 82

   23 constructor: _ID _LPAREN @4 @5 constructor_parameter_list @6 . _RPAREN body

    _RPAREN  shift, and go to state 99


state 83

   31 interface_function: _TYPE _ID @8 _LPAREN parameter_list _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 100


state 84

   83 if_part: _IF _LPAREN . @18 rel_exp @19 _RPAREN statement

    $default  reduce using rule 81 (@18)

    @18  go to state 101


state 85

   63 exp: _ID .
   66    | _ID . _DOT _ID
   70 function_call: _ID . @17 _LPAREN argument _RPAREN

    _DOT  shift, and go to state 102

    _LPAREN   reduce using rule 69 (@17)
    $default  reduce using rule 63 (exp)

    @17  go to state 103


state 86

   67 literal: _INT_NUMBER .

    $default  reduce using rule 67 (literal)


state 87

   68 literal: _UINT_NUMBER .

    $default  reduce using rule 68 (literal)


state 88

   65 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    num_exp        go to state 104
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92


state 89

   61 num_exp: num_exp . _AROP exp
   85 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 105
    _AROP       shift, and go to state 106


state 90

   60 num_exp: exp .

    $default  reduce using rule 60 (num_exp)


state 91

   62 exp: literal .

    $default  reduce using rule 62 (exp)


state 92

   64 exp: function_call .

    $default  reduce using rule 64 (exp)


state 93

   54 object_assignment_statement: _ID _ID . @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

    $default  reduce using rule 51 (@11)

    @11  go to state 107


state 94

   55 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    num_exp        go to state 108
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92


state 95

   59 assignment_statement: _ID _DOT . @14 _ID @15 _ASSIGN num_exp @16 _SEMICOLON

    $default  reduce using rule 56 (@14)

    @14  go to state 109


state 96

   44 statement_list: statement_list . statement
   50 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71
    _RBRACKET  shift, and go to state 110

    statement                    go to state 73
    compound_statement           go to state 74
    object_assignment_statement  go to state 75
    assignment_statement         go to state 76
    if_statement                 go to state 77
    if_part                      go to state 78
    return_statement             go to state 79


state 97

   80 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71

    statement                    go to state 111
    compound_statement           go to state 74
    object_assignment_statement  go to state 75
    assignment_statement         go to state 76
    if_statement                 go to state 77
    if_part                      go to state 78
    return_statement             go to state 79


state 98

   26 constructor_parameter_list: constructor_parameter_list _COMMA constructor_parameter .

    $default  reduce using rule 26 (constructor_parameter_list)


state 99

   23 constructor: _ID _LPAREN @4 @5 constructor_parameter_list @6 _RPAREN . body

    _LBRACKET  shift, and go to state 43

    body  go to state 112


state 100

   31 interface_function: _TYPE _ID @8 _LPAREN parameter_list _RPAREN _SEMICOLON .

    $default  reduce using rule 31 (interface_function)


state 101

   83 if_part: _IF _LPAREN @18 . rel_exp @19 _RPAREN statement

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    num_exp        go to state 113
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    rel_exp        go to state 114


state 102

   66 exp: _ID _DOT . _ID

    _ID  shift, and go to state 115


state 103

   70 function_call: _ID @17 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 116


state 104

   61 num_exp: num_exp . _AROP exp
   65 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 117
    _AROP    shift, and go to state 106


state 105

   85 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 85 (return_statement)


state 106

   61 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    exp            go to state 118
    literal        go to state 91
    function_call  go to state 92


state 107

   54 object_assignment_statement: _ID _ID @11 . _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

    _ASSIGN  shift, and go to state 119


state 108

   55 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   61 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 120
    _AROP       shift, and go to state 106


state 109

   59 assignment_statement: _ID _DOT @14 . _ID @15 _ASSIGN num_exp @16 _SEMICOLON

    _ID  shift, and go to state 121


state 110

   50 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 50 (compound_statement)


state 111

   80 if_statement: if_part _ELSE statement .

    $default  reduce using rule 80 (if_statement)


state 112

   23 constructor: _ID _LPAREN @4 @5 constructor_parameter_list @6 _RPAREN body .

    $default  reduce using rule 23 (constructor)


state 113

   61 num_exp: num_exp . _AROP exp
   84 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 106
    _RELOP  shift, and go to state 122


state 114

   83 if_part: _IF _LPAREN @18 rel_exp . @19 _RPAREN statement

    $default  reduce using rule 82 (@19)

    @19  go to state 123


state 115

   66 exp: _ID _DOT _ID .

    $default  reduce using rule 66 (exp)


state 116

   70 function_call: _ID @17 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    $default  reduce using rule 77 (argument)

    num_exp        go to state 124
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    argument       go to state 125


state 117

   65 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 65 (exp)


state 118

   61 num_exp: num_exp _AROP exp .

    $default  reduce using rule 61 (num_exp)


state 119

   54 object_assignment_statement: _ID _ID @11 _ASSIGN . _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

    _NEW  shift, and go to state 126


state 120

   55 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 55 (assignment_statement)


state 121

   59 assignment_statement: _ID _DOT @14 _ID . @15 _ASSIGN num_exp @16 _SEMICOLON

    $default  reduce using rule 57 (@15)

    @15  go to state 127


state 122

   84 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    num_exp        go to state 128
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92


state 123

   83 if_part: _IF _LPAREN @18 rel_exp @19 . _RPAREN statement

    _RPAREN  shift, and go to state 129


state 124

   61 num_exp: num_exp . _AROP exp
   78 argument: num_exp .

    _AROP  shift, and go to state 106

    $default  reduce using rule 78 (argument)


state 125

   70 function_call: _ID @17 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 130


state 126

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW . _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

    _ID  shift, and go to state 131


state 127

   59 assignment_statement: _ID _DOT @14 _ID @15 . _ASSIGN num_exp @16 _SEMICOLON

    _ASSIGN  shift, and go to state 132


state 128

   61 num_exp: num_exp . _AROP exp
   84 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 106

    $default  reduce using rule 84 (rel_exp)


state 129

   83 if_part: _IF _LPAREN @18 rel_exp @19 _RPAREN . statement

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71

    statement                    go to state 133
    compound_statement           go to state 74
    object_assignment_statement  go to state 75
    assignment_statement         go to state 76
    if_statement                 go to state 77
    if_part                      go to state 78
    return_statement             go to state 79


state 130

   70 function_call: _ID @17 _LPAREN argument _RPAREN .

    $default  reduce using rule 70 (function_call)


state 131

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID . @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

    $default  reduce using rule 52 (@12)

    @12  go to state 134


state 132

   59 assignment_statement: _ID _DOT @14 _ID @15 _ASSIGN . num_exp @16 _SEMICOLON

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    num_exp        go to state 135
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92


state 133

   83 if_part: _IF _LPAREN @18 rel_exp @19 _RPAREN statement .

    $default  reduce using rule 83 (if_part)


state 134

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 . _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 136


state 135

   59 assignment_statement: _ID _DOT @14 _ID @15 _ASSIGN num_exp . @16 _SEMICOLON
   61 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 106

    $default  reduce using rule 58 (@16)

    @16  go to state 137


state 136

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 _LPAREN . new_object_arguments @13 _RPAREN _SEMICOLON

    _ID           shift, and go to state 138
    _INT_NUMBER   shift, and go to state 139
    _UINT_NUMBER  shift, and go to state 140

    $default  reduce using rule 71 (new_object_arguments)

    new_object_arguments  go to state 141
    new_object_argument   go to state 142


state 137

   59 assignment_statement: _ID _DOT @14 _ID @15 _ASSIGN num_exp @16 . _SEMICOLON

    _SEMICOLON  shift, and go to state 143


state 138

   74 new_object_argument: _ID .

    $default  reduce using rule 74 (new_object_argument)


state 139

   75 new_object_argument: _INT_NUMBER .

    $default  reduce using rule 75 (new_object_argument)


state 140

   76 new_object_argument: _UINT_NUMBER .

    $default  reduce using rule 76 (new_object_argument)


state 141

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments . @13 _RPAREN _SEMICOLON
   73 new_object_arguments: new_object_arguments . _COMMA new_object_argument

    _COMMA  shift, and go to state 144

    $default  reduce using rule 53 (@13)

    @13  go to state 145


state 142

   72 new_object_arguments: new_object_argument .

    $default  reduce using rule 72 (new_object_arguments)


state 143

   59 assignment_statement: _ID _DOT @14 _ID @15 _ASSIGN num_exp @16 _SEMICOLON .

    $default  reduce using rule 59 (assignment_statement)


state 144

   73 new_object_arguments: new_object_arguments _COMMA . new_object_argument

    _ID           shift, and go to state 138
    _INT_NUMBER   shift, and go to state 139
    _UINT_NUMBER  shift, and go to state 140

    new_object_argument  go to state 146


state 145

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 147


state 146

   73 new_object_arguments: new_object_arguments _COMMA new_object_argument .

    $default  reduce using rule 73 (new_object_arguments)


state 147

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 148


state 148

   54 object_assignment_statement: _ID _ID @11 _ASSIGN _NEW _ID @12 _LPAREN new_object_arguments @13 _RPAREN _SEMICOLON .

    $default  reduce using rule 54 (object_assignment_statement)
