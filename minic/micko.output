Grammar

    0 $accept: program $end

    1 program: program_architecture

    2 program_architecture: structure_list
    3                     | program_architecture structure_list

    4 structure_list: function
    5               | class
    6               | interface

    7 interface: _INTERFACE _ID _LBRACKET interface_items _RBRACKET

    8 interface_items: /* empty */
    9                | interface_items interface_function

   10 class: _CLASS _ID _LBRACKET class_items _RBRACKET

   11 class_items: /* empty */
   12            | class_items class_item

   13 class_item: function
   14           | class_attribute

   15 class_attribute: _TYPE _ID _SEMICOLON

   16 interface_function: _TYPE _ID _LPAREN parameter _RPAREN _SEMICOLON

   17 @1: /* empty */

   18 function: _TYPE _ID @1 _LPAREN parameter _RPAREN body

   19 parameter: /* empty */
   20          | _TYPE _ID

   21 @2: /* empty */

   22 body: _LBRACKET variable_list @2 statement_list _RBRACKET

   23 variable_list: /* empty */
   24              | variable_list variable

   25 variable: _TYPE _ID _SEMICOLON

   26 statement_list: /* empty */
   27               | statement_list statement

   28 statement: compound_statement
   29          | assignment_statement
   30          | if_statement
   31          | return_statement

   32 compound_statement: _LBRACKET statement_list _RBRACKET

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   34 num_exp: exp
   35        | num_exp _AROP exp

   36 exp: literal
   37    | _ID
   38    | function_call
   39    | _LPAREN num_exp _RPAREN

   40 literal: _INT_NUMBER
   41        | _UINT_NUMBER

   42 @3: /* empty */

   43 function_call: _ID @3 _LPAREN argument _RPAREN

   44 argument: /* empty */
   45         | num_exp

   46 if_statement: if_part
   47             | if_part _ELSE statement

   48 @4: /* empty */

   49 @5: /* empty */

   50 if_part: _IF _LPAREN @4 rel_exp @5 _RPAREN statement

   51 rel_exp: num_exp _RELOP num_exp

   52 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 15 16 18 20 25
_IF (259) 50
_ELSE (260) 47
_RETURN (261) 52
_ID (262) 7 10 15 16 18 20 25 33 37 43
_INT_NUMBER (263) 40
_UINT_NUMBER (264) 41
_LPAREN (265) 16 18 39 43 50
_RPAREN (266) 16 18 39 43 50
_LBRACKET (267) 7 10 22 32
_RBRACKET (268) 7 10 22 32
_ASSIGN (269) 33
_SEMICOLON (270) 15 16 25 33 52
_AROP (271) 35
_RELOP (272) 51
_CLASS (273) 10
_INTERFACE (274) 7
ONLY_IF (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
program_architecture (23)
    on left: 2 3, on right: 1 3
structure_list (24)
    on left: 4 5 6, on right: 2 3
interface (25)
    on left: 7, on right: 6
interface_items (26)
    on left: 8 9, on right: 7 9
class (27)
    on left: 10, on right: 5
class_items (28)
    on left: 11 12, on right: 10 12
class_item (29)
    on left: 13 14, on right: 12
class_attribute (30)
    on left: 15, on right: 14
interface_function (31)
    on left: 16, on right: 9
function (32)
    on left: 18, on right: 4 13
@1 (33)
    on left: 17, on right: 18
parameter (34)
    on left: 19 20, on right: 16 18
body (35)
    on left: 22, on right: 18
@2 (36)
    on left: 21, on right: 22
variable_list (37)
    on left: 23 24, on right: 22 24
variable (38)
    on left: 25, on right: 24
statement_list (39)
    on left: 26 27, on right: 22 27 32
statement (40)
    on left: 28 29 30 31, on right: 27 47 50
compound_statement (41)
    on left: 32, on right: 28
assignment_statement (42)
    on left: 33, on right: 29
num_exp (43)
    on left: 34 35, on right: 33 35 39 45 51 52
exp (44)
    on left: 36 37 38 39, on right: 34 35
literal (45)
    on left: 40 41, on right: 36
function_call (46)
    on left: 43, on right: 38
@3 (47)
    on left: 42, on right: 43
argument (48)
    on left: 44 45, on right: 43
if_statement (49)
    on left: 46 47, on right: 30
if_part (50)
    on left: 50, on right: 46 47
@4 (51)
    on left: 48, on right: 50
@5 (52)
    on left: 49, on right: 50
rel_exp (53)
    on left: 51, on right: 50
return_statement (54)
    on left: 52, on right: 31


state 0

    0 $accept: . program $end

    _TYPE       shift, and go to state 1
    _CLASS      shift, and go to state 2
    _INTERFACE  shift, and go to state 3

    program               go to state 4
    program_architecture  go to state 5
    structure_list        go to state 6
    interface             go to state 7
    class                 go to state 8
    function              go to state 9


state 1

   18 function: _TYPE . _ID @1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 10


state 2

   10 class: _CLASS . _ID _LBRACKET class_items _RBRACKET

    _ID  shift, and go to state 11


state 3

    7 interface: _INTERFACE . _ID _LBRACKET interface_items _RBRACKET

    _ID  shift, and go to state 12


state 4

    0 $accept: program . $end

    $end  shift, and go to state 13


state 5

    1 program: program_architecture .
    3 program_architecture: program_architecture . structure_list

    _TYPE       shift, and go to state 1
    _CLASS      shift, and go to state 2
    _INTERFACE  shift, and go to state 3

    $default  reduce using rule 1 (program)

    structure_list  go to state 14
    interface       go to state 7
    class           go to state 8
    function        go to state 9


state 6

    2 program_architecture: structure_list .

    $default  reduce using rule 2 (program_architecture)


state 7

    6 structure_list: interface .

    $default  reduce using rule 6 (structure_list)


state 8

    5 structure_list: class .

    $default  reduce using rule 5 (structure_list)


state 9

    4 structure_list: function .

    $default  reduce using rule 4 (structure_list)


state 10

   18 function: _TYPE _ID . @1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 17 (@1)

    @1  go to state 15


state 11

   10 class: _CLASS _ID . _LBRACKET class_items _RBRACKET

    _LBRACKET  shift, and go to state 16


state 12

    7 interface: _INTERFACE _ID . _LBRACKET interface_items _RBRACKET

    _LBRACKET  shift, and go to state 17


state 13

    0 $accept: program $end .

    $default  accept


state 14

    3 program_architecture: program_architecture structure_list .

    $default  reduce using rule 3 (program_architecture)


state 15

   18 function: _TYPE _ID @1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 18


state 16

   10 class: _CLASS _ID _LBRACKET . class_items _RBRACKET

    $default  reduce using rule 11 (class_items)

    class_items  go to state 19


state 17

    7 interface: _INTERFACE _ID _LBRACKET . interface_items _RBRACKET

    $default  reduce using rule 8 (interface_items)

    interface_items  go to state 20


state 18

   18 function: _TYPE _ID @1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 21

    $default  reduce using rule 19 (parameter)

    parameter  go to state 22


state 19

   10 class: _CLASS _ID _LBRACKET class_items . _RBRACKET
   12 class_items: class_items . class_item

    _TYPE      shift, and go to state 23
    _RBRACKET  shift, and go to state 24

    class_item       go to state 25
    class_attribute  go to state 26
    function         go to state 27


state 20

    7 interface: _INTERFACE _ID _LBRACKET interface_items . _RBRACKET
    9 interface_items: interface_items . interface_function

    _TYPE      shift, and go to state 28
    _RBRACKET  shift, and go to state 29

    interface_function  go to state 30


state 21

   20 parameter: _TYPE . _ID

    _ID  shift, and go to state 31


state 22

   18 function: _TYPE _ID @1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 32


state 23

   15 class_attribute: _TYPE . _ID _SEMICOLON
   18 function: _TYPE . _ID @1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 33


state 24

   10 class: _CLASS _ID _LBRACKET class_items _RBRACKET .

    $default  reduce using rule 10 (class)


state 25

   12 class_items: class_items class_item .

    $default  reduce using rule 12 (class_items)


state 26

   14 class_item: class_attribute .

    $default  reduce using rule 14 (class_item)


state 27

   13 class_item: function .

    $default  reduce using rule 13 (class_item)


state 28

   16 interface_function: _TYPE . _ID _LPAREN parameter _RPAREN _SEMICOLON

    _ID  shift, and go to state 34


state 29

    7 interface: _INTERFACE _ID _LBRACKET interface_items _RBRACKET .

    $default  reduce using rule 7 (interface)


state 30

    9 interface_items: interface_items interface_function .

    $default  reduce using rule 9 (interface_items)


state 31

   20 parameter: _TYPE _ID .

    $default  reduce using rule 20 (parameter)


state 32

   18 function: _TYPE _ID @1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 35

    body  go to state 36


state 33

   15 class_attribute: _TYPE _ID . _SEMICOLON
   18 function: _TYPE _ID . @1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 37

    $default  reduce using rule 17 (@1)

    @1  go to state 15


state 34

   16 interface_function: _TYPE _ID . _LPAREN parameter _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 38


state 35

   22 body: _LBRACKET . variable_list @2 statement_list _RBRACKET

    $default  reduce using rule 23 (variable_list)

    variable_list  go to state 39


state 36

   18 function: _TYPE _ID @1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 18 (function)


state 37

   15 class_attribute: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (class_attribute)


state 38

   16 interface_function: _TYPE _ID _LPAREN . parameter _RPAREN _SEMICOLON

    _TYPE  shift, and go to state 21

    $default  reduce using rule 19 (parameter)

    parameter  go to state 40


state 39

   22 body: _LBRACKET variable_list . @2 statement_list _RBRACKET
   24 variable_list: variable_list . variable

    _TYPE  shift, and go to state 41

    $default  reduce using rule 21 (@2)

    @2        go to state 42
    variable  go to state 43


state 40

   16 interface_function: _TYPE _ID _LPAREN parameter . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 44


state 41

   25 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 45


state 42

   22 body: _LBRACKET variable_list @2 . statement_list _RBRACKET

    $default  reduce using rule 26 (statement_list)

    statement_list  go to state 46


state 43

   24 variable_list: variable_list variable .

    $default  reduce using rule 24 (variable_list)


state 44

   16 interface_function: _TYPE _ID _LPAREN parameter _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 47


state 45

   25 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 48


state 46

   22 body: _LBRACKET variable_list @2 statement_list . _RBRACKET
   27 statement_list: statement_list . statement

    _IF        shift, and go to state 49
    _RETURN    shift, and go to state 50
    _ID        shift, and go to state 51
    _LBRACKET  shift, and go to state 52
    _RBRACKET  shift, and go to state 53

    statement             go to state 54
    compound_statement    go to state 55
    assignment_statement  go to state 56
    if_statement          go to state 57
    if_part               go to state 58
    return_statement      go to state 59


state 47

   16 interface_function: _TYPE _ID _LPAREN parameter _RPAREN _SEMICOLON .

    $default  reduce using rule 16 (interface_function)


state 48

   25 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 25 (variable)


state 49

   50 if_part: _IF . _LPAREN @4 rel_exp @5 _RPAREN statement

    _LPAREN  shift, and go to state 60


state 50

   52 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    num_exp        go to state 65
    exp            go to state 66
    literal        go to state 67
    function_call  go to state 68


state 51

   33 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 69


state 52

   32 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 26 (statement_list)

    statement_list  go to state 70


state 53

   22 body: _LBRACKET variable_list @2 statement_list _RBRACKET .

    $default  reduce using rule 22 (body)


state 54

   27 statement_list: statement_list statement .

    $default  reduce using rule 27 (statement_list)


state 55

   28 statement: compound_statement .

    $default  reduce using rule 28 (statement)


state 56

   29 statement: assignment_statement .

    $default  reduce using rule 29 (statement)


state 57

   30 statement: if_statement .

    $default  reduce using rule 30 (statement)


state 58

   46 if_statement: if_part .
   47             | if_part . _ELSE statement

    _ELSE  shift, and go to state 71

    $default  reduce using rule 46 (if_statement)


state 59

   31 statement: return_statement .

    $default  reduce using rule 31 (statement)


state 60

   50 if_part: _IF _LPAREN . @4 rel_exp @5 _RPAREN statement

    $default  reduce using rule 48 (@4)

    @4  go to state 72


state 61

   37 exp: _ID .
   43 function_call: _ID . @3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 42 (@3)
    $default  reduce using rule 37 (exp)

    @3  go to state 73


state 62

   40 literal: _INT_NUMBER .

    $default  reduce using rule 40 (literal)


state 63

   41 literal: _UINT_NUMBER .

    $default  reduce using rule 41 (literal)


state 64

   39 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    num_exp        go to state 74
    exp            go to state 66
    literal        go to state 67
    function_call  go to state 68


state 65

   35 num_exp: num_exp . _AROP exp
   52 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 75
    _AROP       shift, and go to state 76


state 66

   34 num_exp: exp .

    $default  reduce using rule 34 (num_exp)


state 67

   36 exp: literal .

    $default  reduce using rule 36 (exp)


state 68

   38 exp: function_call .

    $default  reduce using rule 38 (exp)


state 69

   33 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    num_exp        go to state 77
    exp            go to state 66
    literal        go to state 67
    function_call  go to state 68


state 70

   27 statement_list: statement_list . statement
   32 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 49
    _RETURN    shift, and go to state 50
    _ID        shift, and go to state 51
    _LBRACKET  shift, and go to state 52
    _RBRACKET  shift, and go to state 78

    statement             go to state 54
    compound_statement    go to state 55
    assignment_statement  go to state 56
    if_statement          go to state 57
    if_part               go to state 58
    return_statement      go to state 59


state 71

   47 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 49
    _RETURN    shift, and go to state 50
    _ID        shift, and go to state 51
    _LBRACKET  shift, and go to state 52

    statement             go to state 79
    compound_statement    go to state 55
    assignment_statement  go to state 56
    if_statement          go to state 57
    if_part               go to state 58
    return_statement      go to state 59


state 72

   50 if_part: _IF _LPAREN @4 . rel_exp @5 _RPAREN statement

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    num_exp        go to state 80
    exp            go to state 66
    literal        go to state 67
    function_call  go to state 68
    rel_exp        go to state 81


state 73

   43 function_call: _ID @3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 82


state 74

   35 num_exp: num_exp . _AROP exp
   39 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 83
    _AROP    shift, and go to state 76


state 75

   52 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 52 (return_statement)


state 76

   35 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    exp            go to state 84
    literal        go to state 67
    function_call  go to state 68


state 77

   33 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   35 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 85
    _AROP       shift, and go to state 76


state 78

   32 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 32 (compound_statement)


state 79

   47 if_statement: if_part _ELSE statement .

    $default  reduce using rule 47 (if_statement)


state 80

   35 num_exp: num_exp . _AROP exp
   51 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 76
    _RELOP  shift, and go to state 86


state 81

   50 if_part: _IF _LPAREN @4 rel_exp . @5 _RPAREN statement

    $default  reduce using rule 49 (@5)

    @5  go to state 87


state 82

   43 function_call: _ID @3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    $default  reduce using rule 44 (argument)

    num_exp        go to state 88
    exp            go to state 66
    literal        go to state 67
    function_call  go to state 68
    argument       go to state 89


state 83

   39 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 39 (exp)


state 84

   35 num_exp: num_exp _AROP exp .

    $default  reduce using rule 35 (num_exp)


state 85

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 33 (assignment_statement)


state 86

   51 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 61
    _INT_NUMBER   shift, and go to state 62
    _UINT_NUMBER  shift, and go to state 63
    _LPAREN       shift, and go to state 64

    num_exp        go to state 90
    exp            go to state 66
    literal        go to state 67
    function_call  go to state 68


state 87

   50 if_part: _IF _LPAREN @4 rel_exp @5 . _RPAREN statement

    _RPAREN  shift, and go to state 91


state 88

   35 num_exp: num_exp . _AROP exp
   45 argument: num_exp .

    _AROP  shift, and go to state 76

    $default  reduce using rule 45 (argument)


state 89

   43 function_call: _ID @3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 92


state 90

   35 num_exp: num_exp . _AROP exp
   51 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 76

    $default  reduce using rule 51 (rel_exp)


state 91

   50 if_part: _IF _LPAREN @4 rel_exp @5 _RPAREN . statement

    _IF        shift, and go to state 49
    _RETURN    shift, and go to state 50
    _ID        shift, and go to state 51
    _LBRACKET  shift, and go to state 52

    statement             go to state 93
    compound_statement    go to state 55
    assignment_statement  go to state 56
    if_statement          go to state 57
    if_part               go to state 58
    return_statement      go to state 59


state 92

   43 function_call: _ID @3 _LPAREN argument _RPAREN .

    $default  reduce using rule 43 (function_call)


state 93

   50 if_part: _IF _LPAREN @4 rel_exp @5 _RPAREN statement .

    $default  reduce using rule 50 (if_part)
