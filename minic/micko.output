Grammar

    0 $accept: program $end

    1 program: program_architecture

    2 program_architecture: structure_list
    3                     | program_architecture structure_list

    4 structure_list: function
    5               | class
    6               | interface

    7 @1: /* empty */

    8 interface: _INTERFACE _ID @1 _LBRACKET interface_items _RBRACKET

    9 interface_items: /* empty */
   10                | interface_items interface_function

   11 @2: /* empty */

   12 class: _CLASS _ID @2 _LBRACKET class_items _RBRACKET

   13 @3: /* empty */

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET

   15 class_items: /* empty */
   16            | class_items class_item

   17 class_item: function
   18           | class_attribute
   19           | constructor

   20 @4: /* empty */

   21 constructor: _ID _LPAREN @4 constructor_parameters _RPAREN body

   22 constructor_parameters: /* empty */
   23                       | constructor_parameter_list

   24 constructor_parameter_list: constructor_parameter
   25                           | constructor_parameter_list _COMMA constructor_parameter

   26 constructor_parameter: _TYPE _ID

   27 @5: /* empty */

   28 class_attribute: _TYPE _ID @5 _SEMICOLON

   29 @6: /* empty */

   30 interface_function: _TYPE _ID @6 _LPAREN parameter _RPAREN _SEMICOLON

   31 @7: /* empty */

   32 function: _TYPE _ID @7 _LPAREN parameter _RPAREN body

   33 parameter: /* empty */
   34          | _TYPE _ID

   35 @8: /* empty */

   36 body: _LBRACKET variable_list @8 statement_list _RBRACKET

   37 variable_list: /* empty */
   38              | variable_list variable

   39 variable: _TYPE _ID _SEMICOLON

   40 statement_list: /* empty */
   41               | statement_list statement

   42 statement: compound_statement
   43          | assignment_statement
   44          | if_statement
   45          | return_statement

   46 compound_statement: _LBRACKET statement_list _RBRACKET

   47 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   48 num_exp: exp
   49        | num_exp _AROP exp

   50 exp: literal
   51    | _ID
   52    | function_call
   53    | _LPAREN num_exp _RPAREN

   54 literal: _INT_NUMBER
   55        | _UINT_NUMBER

   56 @9: /* empty */

   57 function_call: _ID @9 _LPAREN argument _RPAREN

   58 argument: /* empty */
   59         | num_exp

   60 if_statement: if_part
   61             | if_part _ELSE statement

   62 @10: /* empty */

   63 @11: /* empty */

   64 if_part: _IF _LPAREN @10 rel_exp @11 _RPAREN statement

   65 rel_exp: num_exp _RELOP num_exp

   66 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 26 28 30 32 34 39
_IF (259) 64
_ELSE (260) 61
_RETURN (261) 66
_ID (262) 8 12 14 21 26 28 30 32 34 39 47 51 57
_INT_NUMBER (263) 54
_UINT_NUMBER (264) 55
_LPAREN (265) 21 30 32 53 57 64
_RPAREN (266) 21 30 32 53 57 64
_LBRACKET (267) 8 12 14 36 46
_RBRACKET (268) 8 12 14 36 46
_ASSIGN (269) 47
_SEMICOLON (270) 28 30 39 47 66
_AROP (271) 49
_RELOP (272) 65
_CLASS (273) 12 14
_INTERFACE (274) 8
_COMMA (275) 25
_IMPLEMENTS (276) 14
ONLY_IF (277)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
program_architecture (25)
    on left: 2 3, on right: 1 3
structure_list (26)
    on left: 4 5 6, on right: 2 3
interface (27)
    on left: 8, on right: 6
@1 (28)
    on left: 7, on right: 8
interface_items (29)
    on left: 9 10, on right: 8 10
class (30)
    on left: 12 14, on right: 5
@2 (31)
    on left: 11, on right: 12
@3 (32)
    on left: 13, on right: 14
class_items (33)
    on left: 15 16, on right: 12 14 16
class_item (34)
    on left: 17 18 19, on right: 16
constructor (35)
    on left: 21, on right: 19
@4 (36)
    on left: 20, on right: 21
constructor_parameters (37)
    on left: 22 23, on right: 21
constructor_parameter_list (38)
    on left: 24 25, on right: 23 25
constructor_parameter (39)
    on left: 26, on right: 24 25
class_attribute (40)
    on left: 28, on right: 18
@5 (41)
    on left: 27, on right: 28
interface_function (42)
    on left: 30, on right: 10
@6 (43)
    on left: 29, on right: 30
function (44)
    on left: 32, on right: 4 17
@7 (45)
    on left: 31, on right: 32
parameter (46)
    on left: 33 34, on right: 30 32
body (47)
    on left: 36, on right: 21 32
@8 (48)
    on left: 35, on right: 36
variable_list (49)
    on left: 37 38, on right: 36 38
variable (50)
    on left: 39, on right: 38
statement_list (51)
    on left: 40 41, on right: 36 41 46
statement (52)
    on left: 42 43 44 45, on right: 41 61 64
compound_statement (53)
    on left: 46, on right: 42
assignment_statement (54)
    on left: 47, on right: 43
num_exp (55)
    on left: 48 49, on right: 47 49 53 59 65 66
exp (56)
    on left: 50 51 52 53, on right: 48 49
literal (57)
    on left: 54 55, on right: 50
function_call (58)
    on left: 57, on right: 52
@9 (59)
    on left: 56, on right: 57
argument (60)
    on left: 58 59, on right: 57
if_statement (61)
    on left: 60 61, on right: 44
if_part (62)
    on left: 64, on right: 60 61
@10 (63)
    on left: 62, on right: 64
@11 (64)
    on left: 63, on right: 64
rel_exp (65)
    on left: 65, on right: 64
return_statement (66)
    on left: 66, on right: 45


state 0

    0 $accept: . program $end

    _TYPE       shift, and go to state 1
    _CLASS      shift, and go to state 2
    _INTERFACE  shift, and go to state 3

    program               go to state 4
    program_architecture  go to state 5
    structure_list        go to state 6
    interface             go to state 7
    class                 go to state 8
    function              go to state 9


state 1

   32 function: _TYPE . _ID @7 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 10


state 2

   12 class: _CLASS . _ID @2 _LBRACKET class_items _RBRACKET
   14      | _CLASS . _ID _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET

    _ID  shift, and go to state 11


state 3

    8 interface: _INTERFACE . _ID @1 _LBRACKET interface_items _RBRACKET

    _ID  shift, and go to state 12


state 4

    0 $accept: program . $end

    $end  shift, and go to state 13


state 5

    1 program: program_architecture .
    3 program_architecture: program_architecture . structure_list

    _TYPE       shift, and go to state 1
    _CLASS      shift, and go to state 2
    _INTERFACE  shift, and go to state 3

    $default  reduce using rule 1 (program)

    structure_list  go to state 14
    interface       go to state 7
    class           go to state 8
    function        go to state 9


state 6

    2 program_architecture: structure_list .

    $default  reduce using rule 2 (program_architecture)


state 7

    6 structure_list: interface .

    $default  reduce using rule 6 (structure_list)


state 8

    5 structure_list: class .

    $default  reduce using rule 5 (structure_list)


state 9

    4 structure_list: function .

    $default  reduce using rule 4 (structure_list)


state 10

   32 function: _TYPE _ID . @7 _LPAREN parameter _RPAREN body

    $default  reduce using rule 31 (@7)

    @7  go to state 15


state 11

   12 class: _CLASS _ID . @2 _LBRACKET class_items _RBRACKET
   14      | _CLASS _ID . _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET

    _IMPLEMENTS  shift, and go to state 16

    $default  reduce using rule 11 (@2)

    @2  go to state 17


state 12

    8 interface: _INTERFACE _ID . @1 _LBRACKET interface_items _RBRACKET

    $default  reduce using rule 7 (@1)

    @1  go to state 18


state 13

    0 $accept: program $end .

    $default  accept


state 14

    3 program_architecture: program_architecture structure_list .

    $default  reduce using rule 3 (program_architecture)


state 15

   32 function: _TYPE _ID @7 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 19


state 16

   14 class: _CLASS _ID _IMPLEMENTS . _ID @3 _LBRACKET class_items _RBRACKET

    _ID  shift, and go to state 20


state 17

   12 class: _CLASS _ID @2 . _LBRACKET class_items _RBRACKET

    _LBRACKET  shift, and go to state 21


state 18

    8 interface: _INTERFACE _ID @1 . _LBRACKET interface_items _RBRACKET

    _LBRACKET  shift, and go to state 22


state 19

   32 function: _TYPE _ID @7 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 23

    $default  reduce using rule 33 (parameter)

    parameter  go to state 24


state 20

   14 class: _CLASS _ID _IMPLEMENTS _ID . @3 _LBRACKET class_items _RBRACKET

    $default  reduce using rule 13 (@3)

    @3  go to state 25


state 21

   12 class: _CLASS _ID @2 _LBRACKET . class_items _RBRACKET

    $default  reduce using rule 15 (class_items)

    class_items  go to state 26


state 22

    8 interface: _INTERFACE _ID @1 _LBRACKET . interface_items _RBRACKET

    $default  reduce using rule 9 (interface_items)

    interface_items  go to state 27


state 23

   34 parameter: _TYPE . _ID

    _ID  shift, and go to state 28


state 24

   32 function: _TYPE _ID @7 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 29


state 25

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 . _LBRACKET class_items _RBRACKET

    _LBRACKET  shift, and go to state 30


state 26

   12 class: _CLASS _ID @2 _LBRACKET class_items . _RBRACKET
   16 class_items: class_items . class_item

    _TYPE      shift, and go to state 31
    _ID        shift, and go to state 32
    _RBRACKET  shift, and go to state 33

    class_item       go to state 34
    constructor      go to state 35
    class_attribute  go to state 36
    function         go to state 37


state 27

    8 interface: _INTERFACE _ID @1 _LBRACKET interface_items . _RBRACKET
   10 interface_items: interface_items . interface_function

    _TYPE      shift, and go to state 38
    _RBRACKET  shift, and go to state 39

    interface_function  go to state 40


state 28

   34 parameter: _TYPE _ID .

    $default  reduce using rule 34 (parameter)


state 29

   32 function: _TYPE _ID @7 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 41

    body  go to state 42


state 30

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET . class_items _RBRACKET

    $default  reduce using rule 15 (class_items)

    class_items  go to state 43


state 31

   28 class_attribute: _TYPE . _ID @5 _SEMICOLON
   32 function: _TYPE . _ID @7 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 44


state 32

   21 constructor: _ID . _LPAREN @4 constructor_parameters _RPAREN body

    _LPAREN  shift, and go to state 45


state 33

   12 class: _CLASS _ID @2 _LBRACKET class_items _RBRACKET .

    $default  reduce using rule 12 (class)


state 34

   16 class_items: class_items class_item .

    $default  reduce using rule 16 (class_items)


state 35

   19 class_item: constructor .

    $default  reduce using rule 19 (class_item)


state 36

   18 class_item: class_attribute .

    $default  reduce using rule 18 (class_item)


state 37

   17 class_item: function .

    $default  reduce using rule 17 (class_item)


state 38

   30 interface_function: _TYPE . _ID @6 _LPAREN parameter _RPAREN _SEMICOLON

    _ID  shift, and go to state 46


state 39

    8 interface: _INTERFACE _ID @1 _LBRACKET interface_items _RBRACKET .

    $default  reduce using rule 8 (interface)


state 40

   10 interface_items: interface_items interface_function .

    $default  reduce using rule 10 (interface_items)


state 41

   36 body: _LBRACKET . variable_list @8 statement_list _RBRACKET

    $default  reduce using rule 37 (variable_list)

    variable_list  go to state 47


state 42

   32 function: _TYPE _ID @7 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 32 (function)


state 43

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET class_items . _RBRACKET
   16 class_items: class_items . class_item

    _TYPE      shift, and go to state 31
    _ID        shift, and go to state 32
    _RBRACKET  shift, and go to state 48

    class_item       go to state 34
    constructor      go to state 35
    class_attribute  go to state 36
    function         go to state 37


state 44

   28 class_attribute: _TYPE _ID . @5 _SEMICOLON
   32 function: _TYPE _ID . @7 _LPAREN parameter _RPAREN body

    _LPAREN   reduce using rule 31 (@7)
    $default  reduce using rule 27 (@5)

    @5  go to state 49
    @7  go to state 15


state 45

   21 constructor: _ID _LPAREN . @4 constructor_parameters _RPAREN body

    $default  reduce using rule 20 (@4)

    @4  go to state 50


state 46

   30 interface_function: _TYPE _ID . @6 _LPAREN parameter _RPAREN _SEMICOLON

    $default  reduce using rule 29 (@6)

    @6  go to state 51


state 47

   36 body: _LBRACKET variable_list . @8 statement_list _RBRACKET
   38 variable_list: variable_list . variable

    _TYPE  shift, and go to state 52

    $default  reduce using rule 35 (@8)

    @8        go to state 53
    variable  go to state 54


state 48

   14 class: _CLASS _ID _IMPLEMENTS _ID @3 _LBRACKET class_items _RBRACKET .

    $default  reduce using rule 14 (class)


state 49

   28 class_attribute: _TYPE _ID @5 . _SEMICOLON

    _SEMICOLON  shift, and go to state 55


state 50

   21 constructor: _ID _LPAREN @4 . constructor_parameters _RPAREN body

    _TYPE  shift, and go to state 56

    $default  reduce using rule 22 (constructor_parameters)

    constructor_parameters      go to state 57
    constructor_parameter_list  go to state 58
    constructor_parameter       go to state 59


state 51

   30 interface_function: _TYPE _ID @6 . _LPAREN parameter _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 60


state 52

   39 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 61


state 53

   36 body: _LBRACKET variable_list @8 . statement_list _RBRACKET

    $default  reduce using rule 40 (statement_list)

    statement_list  go to state 62


state 54

   38 variable_list: variable_list variable .

    $default  reduce using rule 38 (variable_list)


state 55

   28 class_attribute: _TYPE _ID @5 _SEMICOLON .

    $default  reduce using rule 28 (class_attribute)


state 56

   26 constructor_parameter: _TYPE . _ID

    _ID  shift, and go to state 63


state 57

   21 constructor: _ID _LPAREN @4 constructor_parameters . _RPAREN body

    _RPAREN  shift, and go to state 64


state 58

   23 constructor_parameters: constructor_parameter_list .
   25 constructor_parameter_list: constructor_parameter_list . _COMMA constructor_parameter

    _COMMA  shift, and go to state 65

    $default  reduce using rule 23 (constructor_parameters)


state 59

   24 constructor_parameter_list: constructor_parameter .

    $default  reduce using rule 24 (constructor_parameter_list)


state 60

   30 interface_function: _TYPE _ID @6 _LPAREN . parameter _RPAREN _SEMICOLON

    _TYPE  shift, and go to state 23

    $default  reduce using rule 33 (parameter)

    parameter  go to state 66


state 61

   39 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 67


state 62

   36 body: _LBRACKET variable_list @8 statement_list . _RBRACKET
   41 statement_list: statement_list . statement

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71
    _RBRACKET  shift, and go to state 72

    statement             go to state 73
    compound_statement    go to state 74
    assignment_statement  go to state 75
    if_statement          go to state 76
    if_part               go to state 77
    return_statement      go to state 78


state 63

   26 constructor_parameter: _TYPE _ID .

    $default  reduce using rule 26 (constructor_parameter)


state 64

   21 constructor: _ID _LPAREN @4 constructor_parameters _RPAREN . body

    _LBRACKET  shift, and go to state 41

    body  go to state 79


state 65

   25 constructor_parameter_list: constructor_parameter_list _COMMA . constructor_parameter

    _TYPE  shift, and go to state 56

    constructor_parameter  go to state 80


state 66

   30 interface_function: _TYPE _ID @6 _LPAREN parameter . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 81


state 67

   39 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 39 (variable)


state 68

   64 if_part: _IF . _LPAREN @10 rel_exp @11 _RPAREN statement

    _LPAREN  shift, and go to state 82


state 69

   66 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    num_exp        go to state 87
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90


state 70

   47 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 91


state 71

   46 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 40 (statement_list)

    statement_list  go to state 92


state 72

   36 body: _LBRACKET variable_list @8 statement_list _RBRACKET .

    $default  reduce using rule 36 (body)


state 73

   41 statement_list: statement_list statement .

    $default  reduce using rule 41 (statement_list)


state 74

   42 statement: compound_statement .

    $default  reduce using rule 42 (statement)


state 75

   43 statement: assignment_statement .

    $default  reduce using rule 43 (statement)


state 76

   44 statement: if_statement .

    $default  reduce using rule 44 (statement)


state 77

   60 if_statement: if_part .
   61             | if_part . _ELSE statement

    _ELSE  shift, and go to state 93

    $default  reduce using rule 60 (if_statement)


state 78

   45 statement: return_statement .

    $default  reduce using rule 45 (statement)


state 79

   21 constructor: _ID _LPAREN @4 constructor_parameters _RPAREN body .

    $default  reduce using rule 21 (constructor)


state 80

   25 constructor_parameter_list: constructor_parameter_list _COMMA constructor_parameter .

    $default  reduce using rule 25 (constructor_parameter_list)


state 81

   30 interface_function: _TYPE _ID @6 _LPAREN parameter _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 94


state 82

   64 if_part: _IF _LPAREN . @10 rel_exp @11 _RPAREN statement

    $default  reduce using rule 62 (@10)

    @10  go to state 95


state 83

   51 exp: _ID .
   57 function_call: _ID . @9 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 56 (@9)
    $default  reduce using rule 51 (exp)

    @9  go to state 96


state 84

   54 literal: _INT_NUMBER .

    $default  reduce using rule 54 (literal)


state 85

   55 literal: _UINT_NUMBER .

    $default  reduce using rule 55 (literal)


state 86

   53 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    num_exp        go to state 97
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90


state 87

   49 num_exp: num_exp . _AROP exp
   66 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 98
    _AROP       shift, and go to state 99


state 88

   48 num_exp: exp .

    $default  reduce using rule 48 (num_exp)


state 89

   50 exp: literal .

    $default  reduce using rule 50 (exp)


state 90

   52 exp: function_call .

    $default  reduce using rule 52 (exp)


state 91

   47 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    num_exp        go to state 100
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90


state 92

   41 statement_list: statement_list . statement
   46 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71
    _RBRACKET  shift, and go to state 101

    statement             go to state 73
    compound_statement    go to state 74
    assignment_statement  go to state 75
    if_statement          go to state 76
    if_part               go to state 77
    return_statement      go to state 78


state 93

   61 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71

    statement             go to state 102
    compound_statement    go to state 74
    assignment_statement  go to state 75
    if_statement          go to state 76
    if_part               go to state 77
    return_statement      go to state 78


state 94

   30 interface_function: _TYPE _ID @6 _LPAREN parameter _RPAREN _SEMICOLON .

    $default  reduce using rule 30 (interface_function)


state 95

   64 if_part: _IF _LPAREN @10 . rel_exp @11 _RPAREN statement

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    num_exp        go to state 103
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    rel_exp        go to state 104


state 96

   57 function_call: _ID @9 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 105


state 97

   49 num_exp: num_exp . _AROP exp
   53 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 106
    _AROP    shift, and go to state 99


state 98

   66 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 66 (return_statement)


state 99

   49 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    exp            go to state 107
    literal        go to state 89
    function_call  go to state 90


state 100

   47 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   49 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 108
    _AROP       shift, and go to state 99


state 101

   46 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 46 (compound_statement)


state 102

   61 if_statement: if_part _ELSE statement .

    $default  reduce using rule 61 (if_statement)


state 103

   49 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 99
    _RELOP  shift, and go to state 109


state 104

   64 if_part: _IF _LPAREN @10 rel_exp . @11 _RPAREN statement

    $default  reduce using rule 63 (@11)

    @11  go to state 110


state 105

   57 function_call: _ID @9 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    $default  reduce using rule 58 (argument)

    num_exp        go to state 111
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    argument       go to state 112


state 106

   53 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 53 (exp)


state 107

   49 num_exp: num_exp _AROP exp .

    $default  reduce using rule 49 (num_exp)


state 108

   47 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 47 (assignment_statement)


state 109

   65 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    num_exp        go to state 113
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90


state 110

   64 if_part: _IF _LPAREN @10 rel_exp @11 . _RPAREN statement

    _RPAREN  shift, and go to state 114


state 111

   49 num_exp: num_exp . _AROP exp
   59 argument: num_exp .

    _AROP  shift, and go to state 99

    $default  reduce using rule 59 (argument)


state 112

   57 function_call: _ID @9 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 115


state 113

   49 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 99

    $default  reduce using rule 65 (rel_exp)


state 114

   64 if_part: _IF _LPAREN @10 rel_exp @11 _RPAREN . statement

    _IF        shift, and go to state 68
    _RETURN    shift, and go to state 69
    _ID        shift, and go to state 70
    _LBRACKET  shift, and go to state 71

    statement             go to state 116
    compound_statement    go to state 74
    assignment_statement  go to state 75
    if_statement          go to state 76
    if_part               go to state 77
    return_statement      go to state 78


state 115

   57 function_call: _ID @9 _LPAREN argument _RPAREN .

    $default  reduce using rule 57 (function_call)


state 116

   64 if_part: _IF _LPAREN @10 rel_exp @11 _RPAREN statement .

    $default  reduce using rule 64 (if_part)
